<?php
// $Id$

/**
 * @file
 * Implements some keyword based rules for the SEO Checker.
 *
 */

/**
 * Implementation of hook_menu().
 * @return (array) menu items
 */
function keyword_rules_menu() {
  $items['admin/settings/seo_checker/keyword_rules'] = array(
    'title' => t('Keyword Rules'),
    'description' => t('Settings for the keyword SEO rules module.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('keyword_rules_settings'),
    'access arguments' => array('administer seo_checker configuration'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
  return $items;
}

/**
 * Implementation of hook_register_seo_rules().
 * @return (array) rules
 */
function keyword_rules_register_seo_rules() {
  $rules['keyword_density'] = array(
    'name' => t('Keyword density in the body'),
    'description' => t('Checks the density of keywords over the the body of a page. Remark: too high density is not a good SEO.'),
    'threshold type' => 'range',
    'default threshold' => array(5, 20),
    'callback' => 'keyword_rules_density',
    'passed feedback' => t('Test passed.'),
    'failed feedback' => t('Test failed, please make sure you use your keywords in the body but not too often.'),
  );
  return $rules;
}

/**
 * Dervies the densitiy of keywords within the body of the node.
 * @param object $form_values
 */
function keyword_rules_density($form_values) {
  $keywords = $form_values[variable_get('keyword_rules_keywords_field', 'field_seo_keywords')][0]['value'];
  $tags = drupal_explode_tags($keywords);
  if (count($tags) == 0) {
    return 0;
  }
  $body = strip_tags($form_values['body']);
  $words = preg_split('/\W+/', $body);
  $total = count($words);
  $nr_of_tags = 0;
  foreach ($tags as $tag) {
    $pos=-1;
    while (($pos = seo_checker_wordipos($body, $tag, $pos+1)) !== FALSE) {
      $nr_of_tags++;
    }
  }
  return 100*$nr_of_tags/$total;
}

/**
 * Defines the settings form.
 */
function keyword_rules_settings() {
  $form = array();
  $fields = array();
  $fieldarr = content_fields();
  foreach ($fieldarr as $label => $field) {
    $fields[$label] = $field['field_name'];
  }
  $form['keyword_rules_keywords_field'] = array(
    '#type' => 'radios',
    '#title' => t('Field defining the keywords'),
    '#default_value' => variable_get('keyword_rules_keywords_field', 'field_seo_keywords'),
    '#description' => t('Select the field that defines the keywords to be used for the checks.'),
    '#options' => $fields,
  );
  return system_settings_form($form);
}